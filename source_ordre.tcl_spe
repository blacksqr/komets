#___________________________________________________________________________________________________________________________________________
#___________________________________________________________________________________________________________________________________________
#___________________________________________________________________________________________________________________________________________
proc Compare_lower {a b} {return [string compare [string tolower $a] [string tolower $b]]}

#___________________________________________________________________________________________________________________________________________
proc source_recusrif {{dec {}}} {
set rep "puts \"$dec\"\n"
 if { [catch {set L_f [glob -type f *.tcl]} err]} {set L_f ""}
 set L [list]; foreach f $L_f {lappend L $f}
 set L_f [lsort -command Compare_lower $L]
 foreach f $L_f {append rep "puts \"$dec : $f\"\n"
 				 append rep "source $f\n"}
 if { [catch {set L_d [glob -type d *]} err] } {set L_d ""}
 set L_d [lsort -command Compare_lower $L_d]
 foreach d $L_d {append rep "cd $d\n"
                 cd $d
 				   append rep [source_recusrif "$dec/$d"]
 				 cd ..
 				 append rep "cd ..\n"
 				}
 return $rep
}

#___________________________________________________________________________________________________________________________________________
proc Do_rec_source {path} {
 set current_path [pwd]
   cd $path
   eval [source_recusrif "./"]
 cd $current_path
}

#___________________________________________________________________________________________________________________________________________
#___________________________________________________________________________________________________________________________________________
#___________________________________________________________________________________________________________________________________________
set PM_BIGre_B207_files_root ""
proc get_B207_files_root { } {global PM_BIGre_B207_files_root; return $PM_BIGre_B207_files_root;}
proc set_B207_files_root {r} {global PM_BIGre_B207_files_root; set PM_BIGre_B207_files_root $r;}

 
if {[catch {set_B207_files_root $::env(B207_LIBRARY)} err]} {puts "Impossible to find in system variable the location of B207 library..."}

#___________________________________________________________________________________________________________________________________________
#___________________________________________________________________________________________________________________________________________
#___________________________________________________________________________________________________________________________________________
source gml_Object.tcl

set current_path [pwd]
	cd ..
	Comet_files_root     [pwd]/
cd $current_path

cd models
  eval [source_recusrif models]
cd ..
cd root
  eval [source_recusrif root]
cd ..
cd container
  eval [source_recusrif container]
cd ..
cd interleaving
  eval [source_recusrif interleaving]
cd ..

eval [source_recusrif]
cd ..
if {[info exists ::env(GDD)]} {
	cd $::env(GDD)
	eval [source_recusrif]
} else { puts stderr "Install GDD 'svn co https://graphedesdescriptions.googlecode.com/svn/trunk/' and set up the environement variable GDD" ; return -errorCode 1} 
if {[info exists ::env(ROOT_COMETS)]} {cd $::env(ROOT_COMETS)/Comets/} else { puts stderr "Install devComets  'svn co https://devcomets.googlecode.com/svn/trunk/' and set up the environement variable ROOT_COMETS, then install Comets (mandatory name of the directory) in a repertory inside devcomets https://komets.googlecode.com/svn/trunk/"  }
